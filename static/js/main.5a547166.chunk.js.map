{"version":3,"sources":["components/AudioSelector.tsx","utils/functions/useSelect.ts","utils/handlers/SettingsStorage.ts","containers/AudioSelectorContainer.tsx","static/add_black_24dp.svg","static/play_arrow_black_24dp.svg","static/pause_black_24dp.svg","static/delete_black_24dp.svg","static/restart_alt_black_24dp.svg","static/done_black_24dp.svg","config.ts","utils/functions/useToggle.ts","components/TimerItem.tsx","states/ContextPlocState.ts","states/PlocState.ts","states/context.ts","utils/functions/DocumentTitleDisplayer.ts","utils/functions/parseSecsToMinSec.ts","states/TimerPlocState.ts","states/TogglePlocState.ts","states/usePlocState.ts","hooks/useWorkerTimer.ts","containers/TimerItemContainer.tsx","components/TimerList.tsx","utils/handlers/TimerStorage.ts","states/TimerListPlocState.ts","hooks/useTimerList.ts","containers/TimerListContainer.tsx","states/AudioPlocState.ts","view/CustomInputTimer.tsx","view/WorkerTimerView.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["AudioSelector","value","selectorListData","onChangeSelect","className","onChange","map","s","text","memo","useSelect","initSelectVal","onValChanged","handleValChanged","useRef","useState","val","setVal","handleSelect","useCallback","e","target","useEffect","current","SettingsStorage","LSKey","setLSData","payload","originData","origin","this","getLSData","localStorage","setItem","JSON","stringify","data","getItem","parse","AudioSelectorContainer","props","onAudioValueChanged","selectedAudio","_extends","Object","assign","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","d","fill","_ref3","SvgAddBlack24Dp","_ref","svgRef","title","titleId","xmlns","height","viewBox","width","ref","id","ForwardRef","SvgPlayArrowBlack24Dp","SvgPauseBlack24Dp","SvgDeleteBlack24Dp","SvgRestartAltBlack24Dp","enableBackground","SvgDoneBlack24Dp","WORKER_MESSAGES","useToggle","initToggle","toggle","setToggle","handleToggle","t","handleCloseToggle","TimerInput","type","style","padding","fontSize","textAlign","border","backgroundColor","borderRadius","TimerItem","isEdit","paused","timerName","timeStr","timeValues","onStartPause","onReset","onDeleteTimer","onEditTime","onToggleEditTime","onEditTimerName","isEditName","paddingBottom","onClick","autoFocus","placeholder","onBlur","onDoubleClick","display","alignItems","name","String","mins","fontWeight","secs","AUDIO_PATH","process","ContextActionsEnum","DEFAULT_TIME_VALUES","PlocState","initState","_state","_prevState","listeners","prevState","getStateFn","prevVal","newVal","state","newState","partialState","_newState","getNewState","syncStateWithPartialNewState","forEach","l","compareValFn","checkShouldUpdateByListener","compareVal","listenerReturnVal","listener","syncPrevState","singleListener","push","listenerIdx","findIndex","splice","defaultContextState","alarmVolume","context","initS","volume","addlistener","action","updateState","SET_VOLUME","reducer","DocumentTitleDisplayer","timeStrList","listners","filtered","filter","Boolean","document","join","newS","handleAddOrUpdateTime","timerId","parsedTime","_newS","handleRemoveTimeUpTime","parseSecsToMinSec","addZero","num","Math","floor","_secs","getRemainSecs","timeVals","passedSecs","initTimerState","remainSecs","parsedMinSecStr","TimerPlocState","handleResetTimer","console","log","handlePauseTimer","handleStartTimer","timerWorker","postMessage","START","handleStartOrPause","_pause","newPaused","handleEditTimeVals","Number","handleEditTimerName","tName","updateByRemainSecs","onTimeupCb","registerUpdatingByTimerWorker","STOP","tick","TICK_FROM_WORKER","handleAddPassedSecs","addEventListener","removeEventListener","TogglePlocState","_toggle","usePlocState","ploc","setState","removeListener","useWorkerTimer","options","initTimeVals","onTimeValuesChanged","onTimerNameChanged","onTimerEnd","ctxState","worker","timerPloc","timerState","togglePloc","toggleState","handleStartPause","handleTimeValueChanged","_timeValues","Worker","listner","getTimerPloc","handleEditTime","handleReset","handleToggleEditTime","TimerItemContainer","TimerList","timerListData","onAddTimer","TimerStorage","defaultTimers","parsed","timers","getTimersMaxId","ids","max","defaultTimerListState","latestId","timerList","getNewTimerList","newTimeVals","res","timerIdx","timer","TimerListPlocState","makeNewTimer","listenToTimeListChanged","handleAddTimer","newId","handleRemoveTimer","getNewTimerListFn","useTimerList","timerListPloc","timerListState","handleSetTimeValues","handleUpdateTimerListByFn","handleSetTimerName","undefined","TimerListContainer","AUDIO_NAME_URL_LIST","url","defaultAudioState","audioNameUrlList","AudioPlocState","audio","getAudioUrl","find","a","getSelectedAudio","handleSetAudioUrl","setAttribute","load","handleAsyncPlay","play","Promise","handlePlay","handleRepeatPlay","audioOptions","repeatTimes","Array","handlePause","pause","Audio","getHandledTime","InputTimer","onAlarm","inputElRef","inputVal","setInputVal","handleResetInput","handleFocusInput","random","time","sec","slice","min","hour","totalSecs","parseTimeToHHMMSS","handleStartCountdown","handledTimeMin","handledTimeSec","focus","onKeyUp","WorkerTimerView","audioPloc","playTimeout","audioState","ctx","handleChangeVolume","dispatch","useWorkerTimerView","step","CustomInputTimer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5a547166.chunk.js","sourcesContent":["import React, { memo } from 'react';\nimport { AudioSelectorProps } from './types';\nimport './styles.scss';\n\nconst AudioSelector = ({\n  value,\n  selectorListData,\n  onChangeSelect,\n}: AudioSelectorProps) => {\n  return (\n    <div className={'audio-selector--wrapper'}>\n      <h3>{'Audio: '}</h3>\n      <select value={value} onChange={onChangeSelect}>\n        {selectorListData.map(s => (\n          <option key={s.value} value={s.value}>\n            {s.text}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nexport default memo(AudioSelector);","import { Callback } from \"common-types\";\nimport { ChangeEvent, useCallback, useEffect, useRef, useState } from \"react\";\n\nconst useSelect = (initSelectVal = '', onValChanged?: Callback) => {\n  const handleValChanged = useRef(onValChanged);\n  const [val, setVal] = useState(initSelectVal);\n\n  const handleSelect = useCallback((e: ChangeEvent<any>) => {\n    setVal(e.target.value);\n  }, []);\n\n  // handleValChanged.current = onValChanged;\n  useEffect(() => {\n    handleValChanged.current && handleValChanged.current(val);\n  }, [val]);\n\n  return ({\n    val,\n    handleSelect,\n    setVal,\n  });\n};\n\nexport default useSelect;\n","export interface WorkerTimerSettings {\n  volume: number\n  selectedAudio: string\n}\n\nconst SettingsStorage = {\n  LSKey: 'WORKER_TIMER_SETTINGS',\n  \n  setLSData(payload: Partial<WorkerTimerSettings>) {\n    let originData = {\n      ...payload\n    };\n    const origin = this.getLSData();\n    if(origin) {\n      originData = {\n        ...origin,\n        ...originData,\n      };\n    }\n    localStorage.setItem(this.LSKey, JSON.stringify(originData));\n  },\n\n  getLSData(): WorkerTimerSettings | undefined {\n    const data = localStorage.getItem(this.LSKey);\n    if(!data) return undefined;\n    return JSON.parse(data);\n  }\n};\n\nexport default SettingsStorage;","import { SingleSelectorValText } from 'common-types';\nimport AudioSelector from 'components/AudioSelector';\nimport { AudioSelectorProps } from 'components/types';\nimport React, { memo, useEffect } from 'react';\nimport useSelect from 'utils/functions/useSelect';\nimport SettingsStorage from 'utils/handlers/SettingsStorage';\n\nexport interface AudioSelectorContainerProps extends Pick<AudioSelectorProps, 'selectorListData'> {\n  onAudioValueChanged: (url: string) => any\n}\n\nconst AudioSelectorContainer = (props: AudioSelectorContainerProps) => {\n  const {\n    selectorListData,\n    onAudioValueChanged,\n  } = props;\n\n  const initSelectVal = SettingsStorage.getLSData()?.selectedAudio || selectorListData[2]?.value;\n\n  const {\n    val,\n    handleSelect,\n  } = useSelect(initSelectVal, onAudioValueChanged);\n\n  useEffect(() => {\n    SettingsStorage.setLSData({\n      selectedAudio: val,\n    });\n  }, [val]);\n\n  return (\n    <AudioSelector\n      {...props}\n      value={val}\n      onChangeSelect={handleSelect}\n    />\n  );\n};\n\nexport default memo(AudioSelectorContainer);","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0 0h24v24H0V0z\",\n  fill: \"none\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n});\n\nfunction SvgAddBlack24Dp(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    height: \"24px\",\n    viewBox: \"0 0 24 24\",\n    width: \"24px\",\n    fill: \"#000000\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgAddBlack24Dp);\nexport default __webpack_public_path__ + \"static/media/add_black_24dp.376e9b6a.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0 0h24v24H0V0z\",\n  fill: \"none\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M10 8.64L15.27 12 10 15.36V8.64M8 5v14l11-7L8 5z\"\n});\n\nfunction SvgPlayArrowBlack24Dp(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    height: \"24px\",\n    viewBox: \"0 0 24 24\",\n    width: \"24px\",\n    fill: \"#000000\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPlayArrowBlack24Dp);\nexport default __webpack_public_path__ + \"static/media/play_arrow_black_24dp.2cbf407a.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0 0h24v24H0V0z\",\n  fill: \"none\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 19h4V5H6v14zm8-14v14h4V5h-4z\"\n});\n\nfunction SvgPauseBlack24Dp(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    height: \"24px\",\n    viewBox: \"0 0 24 24\",\n    width: \"24px\",\n    fill: \"#000000\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPauseBlack24Dp);\nexport default __webpack_public_path__ + \"static/media/pause_black_24dp.95877413.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0 0h24v24H0V0z\",\n  fill: \"none\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M16 9v10H8V9h8m-1.5-6h-5l-1 1H5v2h14V4h-3.5l-1-1zM18 7H6v12c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7z\"\n});\n\nfunction SvgDeleteBlack24Dp(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    height: \"24px\",\n    viewBox: \"0 0 24 24\",\n    width: \"24px\",\n    fill: \"#000000\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDeleteBlack24Dp);\nexport default __webpack_public_path__ + \"static/media/delete_black_24dp.1129c53a.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0,0h24v24H0V0z\",\n  fill: \"none\"\n}));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6,13c0-1.65,0.67-3.15,1.76-4.24L6.34,7.34C4.9,8.79,4,10.79,4,13c0,4.08,3.05,7.44,7,7.93v-2.02 C8.17,18.43,6,15.97,6,13z M20,13c0-4.42-3.58-8-8-8c-0.06,0-0.12,0.01-0.18,0.01l1.09-1.09L11.5,2.5L8,6l3.5,3.5l1.41-1.41 l-1.08-1.08C11.89,7.01,11.95,7,12,7c3.31,0,6,2.69,6,6c0,2.97-2.17,5.43-5,5.91v2.02C16.95,20.44,20,17.08,20,13z\"\n})));\n\nfunction SvgRestartAltBlack24Dp(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    enableBackground: \"new 0 0 24 24\",\n    height: \"24px\",\n    viewBox: \"0 0 24 24\",\n    width: \"24px\",\n    fill: \"#000000\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgRestartAltBlack24Dp);\nexport default __webpack_public_path__ + \"static/media/restart_alt_black_24dp.7cc6c8f0.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0 0h24v24H0V0z\",\n  fill: \"none\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z\"\n});\n\nfunction SvgDoneBlack24Dp(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    height: \"24px\",\n    viewBox: \"0 0 24 24\",\n    width: \"24px\",\n    fill: \"#000000\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDoneBlack24Dp);\nexport default __webpack_public_path__ + \"static/media/done_black_24dp.6a318b8d.svg\";\nexport { ForwardRef as ReactComponent };","import { TimeValues } from \"./states/TimerPlocState\";\n\nexport const WORKER_PATH = process.env.PUBLIC_URL + '/js/worker.js';\nexport const AUDIO_PATH = process.env.PUBLIC_URL + '/assets/sounds';\n\nexport enum WORKER_MESSAGES {\n  'STOP' = 'stop',\n  'START' = 'start',\n  'TICK_FROM_WORKER' = 'tick-from-worker'\n}\n\nexport const DEFAULT_TIME_VALUES: TimeValues = {\n  mins: 5,\n  secs: 0,\n};","\nimport { Callback } from \"common-types\";\nimport { useState } from \"react\";\n\nexport interface UseToggleStates {\n  toggle: boolean\n  setToggle: (t: boolean) => any\n  handleCloseToggle: Callback\n  handleToggle: Callback\n}\n\nconst useToggle = (initToggle: boolean=false): UseToggleStates => {\n  const [toggle, setToggle] = useState(initToggle);\n\n  const handleToggle = () => {\n    setToggle(t => !t);\n  };\n\n  const handleCloseToggle = () => {\n    toggle && setToggle(false);\n  };\n  \n  return { toggle, setToggle, handleToggle, handleCloseToggle };\n};\n\nexport default useToggle;","import { ReactComponent as StartIcon } from \"../static/play_arrow_black_24dp.svg\";\nimport { ReactComponent as PauseIcon } from \"../static/pause_black_24dp.svg\";\nimport { ReactComponent as DeleteIcon } from \"../static/delete_black_24dp.svg\";\nimport { ReactComponent as ResetIcon } from \"../static/restart_alt_black_24dp.svg\";\nimport { ReactComponent as DoneIcon } from \"../static/done_black_24dp.svg\";\nimport { TimerItemProps } from \"./types\";\nimport useToggle from \"utils/functions/useToggle\";\n\nconst TimerInput = (props: any) => (\n  <input\n    {...props}\n    type=\"number\"\n    style={{\n      width: 60,\n      padding: 4,\n      fontSize: 30,\n      textAlign: \"right\",\n      border: \"none\",\n      backgroundColor: \"#eee\",\n      borderRadius: 6\n    }}\n  />\n);\n\nconst TimerItem = ({\n  isEdit,\n  paused,\n  timerName,\n  timeStr,\n  timeValues,\n  onStartPause,\n  onReset,\n  onDeleteTimer,\n  onEditTime,\n  onToggleEditTime,\n  onEditTimerName,\n}: TimerItemProps) => {\n  const {\n    toggle: isEditName,\n    handleToggle,\n    setToggle,\n  } = useToggle(false);\n  return (\n    <div\n      style={{\n        paddingBottom: 8\n      }}\n    >\n      <div className={\"timer-wrapper\"}>\n        <div className={'timer-name--wrapper'}>\n          <div onClick={handleToggle}>\n            {(!timerName && !isEditName) && (\n              <span className={'input-timer-name-hint'}>\n                {'Double click to add name'}\n              </span>\n            )}\n            {isEditName ? (\n              <input\n                autoFocus={true}\n                value={timerName}\n                placeholder={'Timer Name'}\n                onChange={onEditTimerName}\n                onBlur={() => setToggle(false)} \n              />\n            ): (\n              <p>{timerName}</p>\n            )}\n          </div>\n          <div onDoubleClick={onToggleEditTime(true)}>\n            {isEdit ? (\n              <form\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\"\n                }}\n                onChange={onEditTime}\n              >\n                <TimerInput name=\"mins\" value={String(timeValues.mins)} />\n                <div\n                  style={{\n                    padding: \"0px 4px\",\n                    fontSize: 30,\n                    fontWeight: \"bolder\"\n                  }}\n                >\n                  {\" : \"}\n                </div>\n                <TimerInput name=\"secs\" value={String(timeValues.secs)} />\n                <DoneIcon onClick={onToggleEditTime(false)} />\n              </form>\n            ) : (\n              <h1>{timeStr}</h1>\n            )}\n          </div>\n        </div>\n        <div className={\"button-wrapper\"}>\n          <button className={\"timer-btn\"} onClick={() => onStartPause()}>\n            {paused ? <StartIcon /> : <PauseIcon />}\n          </button>\n          <button className={\"timer-btn\"} onClick={onReset}>\n            <ResetIcon />\n          </button>\n          <button className={\"timer-btn\"} onClick={onDeleteTimer}>\n            <DeleteIcon />\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TimerItem;\n","import SettingsStorage from \"utils/handlers/SettingsStorage\";\nimport PlocState from \"./PlocState\";\n\nexport interface ContextState {\n  alarmVolume: number\n}\n\nexport const defaultContextState: ContextState = {\n  alarmVolume: 0.7,\n};\n\nexport enum ContextActionsEnum {\n  'SET_VOLUME' = 'SET_VOLUME'\n}\n\ntype SetVolumeAction = {\n  type: ContextActionsEnum.SET_VOLUME,\n  payload: { volume: number }\n}\n\ntype ContextAction = \n  SetVolumeAction\n\n\nconst reducer = (state: ContextState, action: ContextAction): ContextState => {\n  switch (action.type) {\n    case ContextActionsEnum.SET_VOLUME:\n      return ({\n        ...state,\n        alarmVolume: action.payload.volume,\n      });\n    default:\n      return state;\n  }\n};\n\nclass ContextPlocState extends PlocState<ContextState> {\n  constructor(initS?: Partial<ContextState>) {\n    super({\n      ...defaultContextState,\n      ...initS,\n      alarmVolume: \n        SettingsStorage.getLSData()?.volume || \n        defaultContextState.alarmVolume\n    });\n    this.addlistener(s => {\n      SettingsStorage.setLSData({ volume: s.alarmVolume, });\n    }, s => [s.alarmVolume]);\n  }\n\n  dispatch(action: ContextAction) {\n    this.updateState(s => reducer(s, action));\n  }\n}\n\nexport default ContextPlocState;","/* eslint-disable no-underscore-dangle */\nexport type Listener<State> = (state: State) => Partial<State> | void | undefined\ninterface GetNewStateFn<State> {\n  (s: State): Partial<State>\n}\n\nexport interface SingleListenerWithCompare<State> {\n  compareVal: State[keyof State][]\n  compareValFn?: (s: State) => State[keyof State][]\n  listener: Listener<State>\n}\n\nclass PlocState<State> {\n  private _state: State\n  private _prevState: State\n\n  get state(): State {\n    return this._state;\n  }\n\n  listeners: (SingleListenerWithCompare<State>)[]\n\n  constructor(initState: State) {\n    this._state = initState;\n    this._prevState = initState;\n    this.listeners = [];\n  }\n\n  private checkShouldUpdateByListener(prevState: any[], getStateFn: (s: State) => any): boolean {\n    for (let i = 0; i < prevState.length; i += 1) {\n      const prevVal = prevState[i];\n      const newVal = getStateFn(this.state)[i];\n      // console.log('checkShouldUpdateByListener: ', prevVal, newVal);\n      if (JSON.stringify(prevVal) !== JSON.stringify(newVal)) return true;\n    }\n    return false;\n  }\n\n  private getNewState<NewState extends Partial<State> | GetNewStateFn<State>>(newState: NewState): Partial<State> {\n    const _newState = (typeof newState === 'function' ? (newState as GetNewStateFn<State>)(this.state) : newState) as Partial<State>;\n    return _newState;\n  }\n\n  private compareStateIsSame(newState: State) {\n    return JSON.stringify(this._prevState) === JSON.stringify(newState);\n  }\n\n  private syncPrevState() {\n    this._prevState = JSON.parse(JSON.stringify(this.state));\n  }\n\n  private syncStateWithPartialNewState(partialState: Partial<State>) {\n    this._state = {\n      ...this.state,\n      ...partialState,\n    };\n  }\n\n  updateState<NewState extends Partial<State> | GetNewStateFn<State>>(newState: NewState): void {\n    const _newState = this.getNewState(newState);\n\n    this.syncStateWithPartialNewState(_newState);\n    // if(this.compareStateIsSame(this._state)) return;\n\n    this.listeners.forEach((l, i) => {\n      if (l.compareValFn) {\n        const shouldUpdateByCompareVal = this.checkShouldUpdateByListener(l.compareVal, l.compareValFn);\n        if (!shouldUpdateByCompareVal) return;\n      }\n\n      const listenerReturnVal = l.listener(this.state);\n      if (listenerReturnVal && typeof listenerReturnVal === 'object') {\n        this.syncStateWithPartialNewState(listenerReturnVal);\n      }\n      if (l.compareValFn) { l.compareVal = [...l.compareValFn(this.state)]; }\n    });\n    this.syncPrevState();\n  }\n\n  addlistener(listener: Listener<State>, compareValFn?: (s: State) => State[keyof State][]): void {\n    const singleListener: SingleListenerWithCompare<State> = {\n      listener,\n      compareValFn,\n      compareVal: compareValFn ? [...compareValFn(this.state)] : [],\n    };\n    // console.log(singleListener);\n    this.listeners.push(singleListener);\n  }\n\n  removeListener(listener: Listener<State>): void {\n    const listenerIdx = this.listeners.findIndex((l) => l.listener === listener);\n    if (listenerIdx !== -1) {\n      this.listeners.splice(listenerIdx, 1);\n    }\n  }\n}\n\nexport default PlocState;\n","import ContextPlocState from \"./ContextPlocState\";\n\nexport const context = new ContextPlocState();","const DEFAULT_TIMER_TITLE = 'Worker Timer!';\nexport interface DocumentTitleDisplayerState {\n  timeStrList: string[]\n}\n\nconst splitParsedMinSec = (parsedTime: string) => {\n  const [\n    min, sec\n  ] = parsedTime.split(':').map(Number);\n  return ({\n    min, sec\n  });\n};\n\nconst DocumentTitleDisplayer = (() => {\n  let state: DocumentTitleDisplayerState = {\n    timeStrList: [],\n  };\n  const listners: ((s: DocumentTitleDisplayerState) => any)[] = [];\n  listners.push(\n    handleShowJoinedTimeOnTitle,\n  );\n\n  function handleShowJoinedTimeOnTitle(s: DocumentTitleDisplayerState) {\n    // console.log(s.timeStrList);\n    const filtered = s.timeStrList.filter(Boolean);\n    if(!filtered.length) {\n      document.title = DEFAULT_TIMER_TITLE;\n    } else {\n      document.title = filtered.join(' / ');\n    }\n  };\n\n  const updateState = (newS: Partial<DocumentTitleDisplayerState>) => {\n    state = {\n      ...state,\n      ...newS,\n    };\n    listners.forEach(l => l(state));\n  };\n\n  function handleRemoveTimeUpTime(timerId: number) {\n    const newS = [...state.timeStrList];\n    newS.splice(timerId);\n    updateState({\n      timeStrList: newS,\n    });\n  };\n\n  const handleAddOrUpdateTime = (timerId: number, parsedTime: string) => {\n    const _newS = [...state.timeStrList];\n    // console.log(timerId, parsedTime, _newS);\n    _newS[timerId] = parsedTime;\n    updateState({\n      timeStrList: _newS,\n    });\n  };\n\n  return ({\n    handleAddOrUpdateTime,\n    handleRemoveTimeUpTime,\n  });\n})();\n\nexport default DocumentTitleDisplayer;\n","\nconst parseSecsToMinSec = (secs = 0) => {\n  const addZero = (num = 0) => (num < 10 ? `0${num}` : num);\n  const mins = Math.floor(secs / 60);\n  const _secs = secs % 60;\n  return `${addZero(mins)}:${addZero(_secs)}`;\n};\n\nexport default parseSecsToMinSec;","import { Callback, SetTimeValuesFn } from \"common-types\";\nimport DocumentTitleDisplayer from \"utils/functions/DocumentTitleDisplayer\";\nimport { WORKER_MESSAGES, WORKER_PATH } from \"../config\";\nimport parseSecsToMinSec from \"../utils/functions/parseSecsToMinSec\";\nimport PlocState, { Listener, } from \"./PlocState\";\n\nconst getRemainSecs = (timeVals: TimeValues, passedSecs: number) => (\n  timeVals.mins * 60 + timeVals.secs - passedSecs\n);\n\nexport interface TimeValues {\n  mins: number;\n  secs: number;\n}\n\nexport interface TimerState {\n  timerId: number\n  timerWorker?: any\n  timerName?: string\n  remainSecs: number\n  passedSecs: number\n  paused: boolean\n  timeValues: TimeValues\n  parsedMinSecStr: string\n  onTimeupCb?: (s: TimerState) => any\n  onTimeValuesChangedCb?: (timeValues: TimeValues) => any\n}\n\nexport const initTimerState: TimerState = {\n  timerId: 0,\n  timerName: '',\n  remainSecs: 0,\n  passedSecs: 0,\n  paused: true,\n  timeValues: {\n    mins: 1,\n    secs: 0,\n  },\n  parsedMinSecStr: '',\n};\nclass TimerPlocState extends PlocState<TimerState> {\n  constructor(initState?: Partial<TimerState>) {\n    super({\n      ...initTimerState,\n      ...initState,\n    });\n    this.registerUpdatingByTimerWorker();\n    this.updateState(s => ({\n      remainSecs: getRemainSecs(s.timeValues, s.passedSecs),\n    }));\n    this.updateState(s => ({\n      parsedMinSecStr: parseSecsToMinSec(s.remainSecs)\n    }));\n\n    this.addlistener(s => {\n      const remainSecs = getRemainSecs(s.timeValues, s.passedSecs);\n      const parsedMinSecStr = parseSecsToMinSec(remainSecs);\n      // DocumentTitleDisplayer.handleAddOrUpdateTime(\n      //   this.state.timerId,\n      //   this.state.parsedMinSecStr,\n      // );\n      return ({\n        remainSecs,\n        parsedMinSecStr,\n      });\n    }, s => [s.passedSecs, s.timeValues, ]);\n\n    this.addlistener(\n      this.updateByRemainSecs,\n      s => [s.remainSecs, s.paused]\n    );\n  }\n\n  get timerWorker() {\n    return this.state.timerWorker;\n  }\n\n  handleResetTimer = () => {\n    console.log('reset');\n    this.handlePauseTimer();\n    this.updateState(s => ({\n      passedSecs: 0,\n      // parsedMinSecStr: parseSecsToMinSec(s.remainSecs)\n    }));\n  }\n\n  handlePauseTimer() {\n    console.log('timer paused');\n    this.updateState(s => ({\n      paused: true \n    }));\n    this.timerWorker.postMessage(WORKER_MESSAGES.STOP);\n  }\n\n  handleStartTimer = () => {\n    console.log('timer started');\n    this.updateState(s => ({\n      paused: false,\n    }));\n    this.timerWorker.postMessage(WORKER_MESSAGES.START);\n  }\n\n  handleStartOrPause = (_pause?: boolean) => {\n    const { paused } = this.state;\n    let newPaused = !paused;\n    if(typeof _pause === 'boolean') {\n      newPaused = _pause;\n    }\n    if(newPaused) {\n      this.handlePauseTimer();\n    } else {\n      this.handleStartTimer();\n    }\n  }\n\n  handleEditTimeVals = (name: any, val: string | number) => {\n    this.updateState((s) => ({\n      timeValues: ({\n        ...s.timeValues,\n        [name]: Number(val) < 0 ? 0 : Number(val)\n      })\n    }));\n  }\n\n  handleEditTimerName = (tName: string) => {\n    this.updateState(s => ({\n      timerName: tName,\n    }));\n  }\n\n  handleAddPassedSecs() {\n    !this.state.paused && this.updateState((s) => ({\n      passedSecs: s.passedSecs + 1,\n    }));\n  }\n\n  registerUpdatingByTimerWorker(timerWorker?: Worker) {\n    if(timerWorker) {\n      this.updateState(s => ({\n        timerWorker,\n      }));\n    }\n    if(this.timerWorker) {\n      const tick = (e: MessageEvent<any>) => {\n        if(e.data === WORKER_MESSAGES.TICK_FROM_WORKER) {\n          this.handleAddPassedSecs();\n        }\n      };\n  \n      this.timerWorker.addEventListener('message', tick);\n      return () => {\n        this.timerWorker.removeEventListener('message', tick);\n        this.timerWorker.postMessage(WORKER_MESSAGES.STOP);\n      };\n    }\n  }\n\n  private updateByRemainSecs: Listener<TimerState> = (s) => {\n    if(s.remainSecs < 0 && !s.paused) {\n      this.handleResetTimer();\n      s.onTimeupCb && s.onTimeupCb(this.state);\n    }\n  }\n}\n\nexport default TimerPlocState;\n","import PlocState from \"./PlocState\";\n\nexport interface ToggleState {\n  toggle: boolean\n}\n\nclass TogglePlocState extends PlocState<ToggleState> {\n  handleToggle = () => {\n    this.updateState(s => ({\n      toggle: !s.toggle\n    }));\n  }\n\n  setToggle = (_toggle: ToggleState['toggle']) => {\n    this.updateState({\n      toggle: _toggle\n    });\n  }\n}\n\nexport default TogglePlocState;","import { useCallback, useEffect, useState } from \"react\";\nimport PlocState from \"./PlocState\";\n\nconst usePlocState = <S>(ploc: PlocState<S>) => {\n  const [state, setState] = useState(ploc.state);\n\n  useEffect(() => {\n    const listener = (newState: S) => {\n      // console.log(newState);\n      setState(newState);\n    };\n    ploc.addlistener(listener);\n    return () => ploc.removeListener(listener);\n  }, [ploc]);\n\n  return state;\n};\n\nexport default usePlocState;","import {Callback} from \"common-types\";\nimport {DEFAULT_TIME_VALUES, WORKER_PATH} from \"config\";\nimport {ChangeEvent, useCallback, useEffect, useRef} from \"react\";\nimport {context} from \"states/context\";\nimport {Listener} from \"states/PlocState\";\nimport DocumentTitleDisplayer from \"utils/functions/DocumentTitleDisplayer\";\nimport TimerPlocState, {TimerState, TimeValues} from \"../states/TimerPlocState\";\nimport TogglePlocState, {ToggleState} from \"../states/TogglePlocState\";\nimport usePlocState from \"../states/usePlocState\";\n\nexport interface UseWorkerTimerOptions {\n    timerId: number\n    timerName?: string\n    initTimeVals?: TimeValues\n    onTimeValuesChanged?: (timerId: number, timeVals: TimeValues) => any\n    onTimerNameChanged: (id: number, timerName?: string) => any\n    onTimerEnd: Callback\n}\n\nconst useWorkerTimer = (options: UseWorkerTimerOptions) => {\n    const {\n        timerName,\n        timerId,\n        initTimeVals,\n        onTimeValuesChanged,\n        onTimerNameChanged,\n        onTimerEnd,\n    } = options;\n\n    const ctxState = usePlocState(context);\n\n    const getVolume = () => {\n        // console.log(context.state.alarmVolume);\n        return context.state.alarmVolume;\n    };\n\n    const worker = useRef<any>();\n    const timerPloc = useRef(new TimerPlocState({\n        // timerWorker: worker.current,\n        timerId,\n        timerName,\n        timeValues: initTimeVals || DEFAULT_TIME_VALUES,\n        onTimeupCb: (s) => {\n            onTimerEnd({\n                volume: getVolume(),\n            });\n            DocumentTitleDisplayer.handleRemoveTimeUpTime(s.timerId);\n        }\n    }));\n    const timerState = usePlocState(timerPloc.current);\n\n    const togglePloc = useRef(new TogglePlocState({\n        toggle: false,\n    }));\n    const toggleState = usePlocState(togglePloc.current);\n\n    const handleStartPause = timerPloc.current.handleStartOrPause;\n\n    const handleEditTime = (e: any) => {\n        timerPloc.current.handleEditTimeVals(e.target.name, e.target.value);\n    };\n\n    const handleEditTimerName = (e: ChangeEvent<any>) => {\n        timerPloc.current.handleEditTimerName(e.target.value);\n    };\n\n    const handleTimeValueChanged = useCallback((_timeValues: TimeValues) => {\n        onTimeValuesChanged && onTimeValuesChanged(timerId, {..._timeValues});\n    }, [onTimeValuesChanged, timerId]);\n\n    useEffect(() => {\n        worker.current = new Worker(WORKER_PATH);\n        timerPloc.current.registerUpdatingByTimerWorker(\n            worker.current\n        );\n        timerPloc.current.addlistener((s) => {\n            DocumentTitleDisplayer.handleAddOrUpdateTime(\n                s.timerId,\n                s.parsedMinSecStr,\n            );\n        }, s => [s.parsedMinSecStr, s.timerId]);\n    }, []);\n\n    useEffect(() => {\n        const listener: Listener<TimerState> = (s) => {\n            console.log(s.timerName);\n            onTimerNameChanged(timerId, s.timerName);\n        };\n        timerPloc.current.addlistener(listener, s => [s.timerName]);\n        return () => timerPloc.current.removeListener(listener);\n    }, [onTimerNameChanged, timerId]);\n\n    useEffect(() => {\n        const listner: Listener<ToggleState> = s => {\n            if (!s.toggle) {\n                handleTimeValueChanged(timerPloc.current.state.timeValues);\n            }\n        };\n        togglePloc.current.addlistener(listner, s => [s.toggle]);\n        return () => togglePloc.current.removeListener(listner);\n    }, [handleTimeValueChanged]);\n\n    // useEffect(() => {\n    //   console.log(ctxState.alarmVolume);\n    // }, [ctxState.alarmVolume]);\n\n    return ({\n        ctxState,\n        toggleState,\n        timerState,\n        getTimerPloc: () => timerPloc,\n        handleEditTime,\n        handleEditTimerName,\n        handleStartPause,\n        handleReset: timerPloc.current.handleResetTimer,\n        handleToggleEditTime: togglePloc.current.setToggle,\n    });\n};\n\nexport default useWorkerTimer;\n","import React, { memo } from 'react';\nimport TimerItem from '../components/TimerItem';\nimport useWorkerTimer from '../hooks/useWorkerTimer';\nimport { TimerItemContainerProps } from './types';\n\nconst TimerItemContainer = (props: TimerItemContainerProps) => {\n  const {\n    ctxState,\n    toggleState,\n    timerState,\n    handleEditTime,\n    handleEditTimerName,\n    handleReset,\n    handleStartPause,\n    handleToggleEditTime,\n  } = useWorkerTimer(props);\n\n  return (\n    <>\n      <span style={{\n        display: 'none',\n      }}>{ctxState.alarmVolume}</span>\n      <TimerItem\n        timerName={timerState.timerName}\n        isEdit={toggleState.toggle}\n        paused={timerState.paused}\n        timeStr={timerState.parsedMinSecStr}\n        timeValues={timerState.timeValues}\n        onEditTime={handleEditTime}\n        onEditTimerName={handleEditTimerName}\n        onStartPause={handleStartPause}\n        onReset={handleReset}\n        onDeleteTimer={props.onDeleteTimer}\n        onToggleEditTime={(toggle: boolean) => () => handleToggleEditTime(toggle)}\n      />\n    </>\n  );\n};\n\nexport default memo(TimerItemContainer);","import React, {memo} from 'react';\nimport {ReactComponent as AddIcon} from 'static/add_black_24dp.svg';\nimport TimerItemContainer from '../containers/TimerItemContainer';\nimport {TimerListProps} from './types';\n\nconst TimerList = ({\n                       timerListData,\n                       onAddTimer,\n                       onDeleteTimer,\n                       onTimerNameChanged,\n                       onTimeValuesChanged,\n                       onTimerEnd,\n                   }: TimerListProps) => {\n    return (\n        <>\n            {timerListData.map(({timerId: id, timeValues, timerName,}) => (\n                <TimerItemContainer\n                    key={id}\n                    timerId={id}\n                    timerName={timerName}\n                    initTimeVals={timeValues}\n                    onDeleteTimer={() => onDeleteTimer(id)}\n                    onTimeValuesChanged={onTimeValuesChanged}\n                    onTimerNameChanged={onTimerNameChanged}\n                    onTimerEnd={onTimerEnd}\n                />\n            ))}\n            <button className={\"timer-btn\"} onClick={onAddTimer}>\n                <AddIcon/>\n            </button>\n        </>\n    );\n};\n\nexport default memo(TimerList);\n","import { SingleTimer } from \"../../components/types\";\nimport { DEFAULT_TIME_VALUES } from \"../../config\";\nimport { TimeValues } from \"../../states/TimerPlocState\";\n\nconst TimerStorage = {\n  LSKey: \"worker-timer\",\n\n  defaultTimers: [\n    {\n      timerId: 0,\n      timeValues: DEFAULT_TIME_VALUES\n    }\n  ],\n\n  getLSData(): SingleTimer[] {\n    const data = localStorage.getItem(this.LSKey);\n    if (!data) {\n      return this.defaultTimers;\n    }\n    const parsed = JSON.parse(data);\n\n    return !parsed.length ? this.defaultTimers : parsed;\n  },\n\n  setLSData(timers: SingleTimer[]) {\n    const data = JSON.stringify(timers);\n    localStorage.setItem(this.LSKey, data);\n  },\n\n  getTimersMaxId: (timers: SingleTimer[]) => {\n    const ids = timers.map((t) => t.timerId);\n    return Math.max(...ids);\n  }\n};\n\nexport default TimerStorage;\n","import { SingleTimer } from \"../components/types\";\nimport { DEFAULT_TIME_VALUES } from \"../config\";\nimport TimerStorage from \"../utils/handlers/TimerStorage\";\nimport PlocState, { Listener } from \"./PlocState\";\nimport { TimeValues } from \"./TimerPlocState\";\n\nexport interface TimerListState {\n  timerList: SingleTimer[]\n  latestId: number\n}\n\nconst defaultTimerListState: TimerListState = {\n  latestId: 0,\n  timerList: []\n};\n\nexport const getNewTimerList = (timerId: number, newTimeVals?: TimeValues, timerName?: string) => (s: TimerListState): TimerListState['timerList'] => {\n  let res: TimerListState['timerList'] = [...JSON.parse(JSON.stringify(s.timerList))];\n    \n  const timerIdx = s.timerList.findIndex(t => t.timerId === timerId);\n  if(timerIdx !== -1) {\n    // console.log(res[timerId]);\n    const timer = res[timerIdx];\n    res[timerIdx] = {\n      ...timer,\n      timeValues: newTimeVals || timer.timeValues,\n      timerName: timerName || timer.timerName,\n    };\n  }\n  return res;\n};\n\nclass TimerListPlocState extends PlocState<TimerListState> {\n  constructor(initS?:  Partial<TimerListState>) {\n    super({\n      ...defaultTimerListState,\n      ...initS,\n    });\n    this.addlistener(\n      this.listenToTimeListChanged,\n      s => [[...s.timerList]]\n    );\n  }\n\n  private makeNewTimer = (id: number, timeValues = DEFAULT_TIME_VALUES): SingleTimer => {\n    return ({\n      timerId: id,\n      timerName: '',\n      timeValues,\n    });\n  }\n\n  private listenToTimeListChanged: Listener<TimerListState> = (s) => {\n    TimerStorage.setLSData(s.timerList);\n    return ({\n      timerList: s.timerList,\n    });\n  }\n\n  handleAddTimer = (timeValues?: TimeValues) => {\n    this.updateState(s => {\n      const newId = s.latestId + 1;\n      return ({\n        latestId: newId,\n        timerList: [...s.timerList, this.makeNewTimer(newId, timeValues)]\n      });\n    });\n  }\n\n  handleRemoveTimer = (id: number) => {\n    this.updateState(s => ({\n      timerList: s.timerList.filter(t => t.timerId !== id)\n    }));\n  }\n\n  handleUpdateTimerListByFn(getNewTimerListFn: (params: any) => SingleTimer[]) {\n    this.updateState(s => {\n      return ({\n        timerList: getNewTimerListFn(s),\n      });\n    });\n  }\n}\n\nexport default TimerListPlocState;","import { useRef } from \"react\";\nimport TimerListPlocState, { getNewTimerList } from \"states/TimerListPlocState\";\nimport { TimeValues } from \"states/TimerPlocState\";\nimport usePlocState from \"states/usePlocState\";\nimport TimerStorage from \"utils/handlers/TimerStorage\";\n\nconst useTimerList = () => {\n  const timerListPloc = useRef(new TimerListPlocState({\n    latestId: TimerStorage.getTimersMaxId(\n      TimerStorage.getLSData()\n    ),\n    timerList: TimerStorage.getLSData()\n  }));\n  const timerListState = usePlocState(timerListPloc.current);\n\n  const {\n    handleAddTimer,\n    handleRemoveTimer,\n  } = timerListPloc.current;\n\n  const handleSetTimeValues = (id: number, timeValues: TimeValues) => {\n    timerListPloc.current.handleUpdateTimerListByFn(\n      getNewTimerList(id, timeValues)\n    );\n  };\n\n  const handleSetTimerName = (id: number, timerName?: string) => {\n    timerListPloc.current.handleUpdateTimerListByFn(\n      getNewTimerList(id, undefined, timerName)\n    );\n  };\n\n  return ({\n    timerListState,\n    handleAddTimer,\n    handleSetTimeValues,\n    handleSetTimerName,\n    handleRemoveTimer,\n  });\n};\n\nexport default useTimerList;","import TimerList from 'components/TimerList';\nimport useTimerList from 'hooks/useTimerList';\nimport React, { memo } from 'react';\nimport { TimerListContainerProps } from './types';\n\nconst TimerListContainer = (props: TimerListContainerProps) => {\n  const {\n    timerListState,\n    handleAddTimer,\n    handleRemoveTimer,\n    handleSetTimeValues,\n    handleSetTimerName,\n  } = useTimerList();\n\n  return (\n    <TimerList \n      {...props}\n      timerListData={timerListState.timerList}\n      onAddTimer={() => handleAddTimer()}\n      onDeleteTimer={handleRemoveTimer}\n      onTimeValuesChanged={handleSetTimeValues}\n      onTimerNameChanged={handleSetTimerName}\n    />\n  );\n};\n\nexport default memo(TimerListContainer);","import { AUDIO_PATH } from \"config\";\nimport PlocState from \"./PlocState\";\n\nexport type AudioNameType = \n  'maracaDance' |\n  'clearQuiz'|\n  'clearStage'|\n  'yahaha'|\n  'heyListen'\n\nconst AUDIO_NAME_URL_LIST: SingleAudioNameUrl[] = [\n  { name: 'maracaDance', url: AUDIO_PATH + '/maracadance.mp3'},\n  { name: 'clearQuiz', url: AUDIO_PATH + '/clear-quiz.mp3'},\n  { name: 'clearStage', url: AUDIO_PATH + '/clear-stage.mp3'},\n  { name: 'yahaha', url: AUDIO_PATH + '/yahaha.mp3'},\n  { name: 'heyListen', url: AUDIO_PATH + '/zelda-navi-listen.mp3'},\n];\n\nconst defaultPlayTimeout = 1500;\n\nexport interface SingleAudioNameUrl {\n  name: AudioNameType\n  url: string\n}\n\nexport interface AudioState {\n  repeatTimes?: number\n  playTimeout?: number // ms\n  volume: number\n  selectedAudio: AudioNameType\n  audioNameUrlList: SingleAudioNameUrl[]\n}\n\nexport const defaultAudioState: AudioState = {\n  volume: 0.4,\n  selectedAudio: AUDIO_NAME_URL_LIST[0].name,\n  audioNameUrlList: AUDIO_NAME_URL_LIST\n};\n\nclass AudioPlocState extends PlocState<AudioState> {\n  audio: HTMLAudioElement\n\n  constructor(initS?: Partial<AudioState>) {\n    super({\n      ...defaultAudioState,\n      ...initS,\n    });\n    this.audio = new Audio(this.getSelectedAudio());\n    this.audio.volume = this.state.volume;\n  }\n\n  private getAudioUrl = (name: string) => {\n    return this.state.audioNameUrlList.find(a => a.name === name);\n  }\n  private getSelectedAudio = () => {\n    return this.getAudioUrl(this.state.selectedAudio)?.url;\n  }\n\n  handleSetAudioUrl = (url: string) => {\n    this.audio.setAttribute('src', url);\n    this.audio.load();\n  }\n\n  handleAsyncPlay = () => {\n    this.audio.play();\n    return new Promise(res => {\n      this.audio.addEventListener('ended', () => {\n        // console.log('audio ended');\n        res('ended');\n      });\n    });\n  }\n\n  handlePlay = () => {\n    // this.audio.play();\n    this.handleRepeatPlay();\n    // setTimeout(() => {\n    //   this.handlePause();\n    // }, this.state.playTimeout || defaultPlayTimeout);\n  }\n\n  handleRepeatPlay = (audioOptions?: { volume?: number}) => {\n    (async () => {\n      console.log(audioOptions);\n      if(audioOptions?.volume) {\n        this.audio.volume = audioOptions?.volume;\n      }\n      const repeatTimes = this.state.repeatTimes || 3;\n      for await (const i of Array(repeatTimes)) {\n        await this.handleAsyncPlay();\n      }\n      this.handlePause();\n    })();\n  }\n\n  handlePause = () => {\n    this.audio.pause();\n  }\n}\n\nexport default AudioPlocState;","import React, {KeyboardEventHandler, useEffect, useRef, useState} from \"react\";\nimport {Callback} from \"../common-types\";\nimport useWorkerTimer from \"../hooks/useWorkerTimer\";\n\ninterface InputTimerProps {\n    onReset?: Callback\n    onAlarm: Callback\n}\n\nconst initTimeVals = {\n    mins: 0,\n    secs: 0,\n};\n\nfunction getHandledTime(num: number | string) {\n    return Number(num) < 0 ? 0 : Number(num);\n}\n\nfunction parseTimeToHHMMSS(inputVal: string) {\n    const sec = inputVal.slice(inputVal.length - 2, inputVal.length) || \"00\";\n    const min =\n        inputVal.slice(Math.max(inputVal.length - 4, 0), inputVal.length - 2) ||\n        \"00\";\n    const hour = inputVal.slice(0, Math.max(inputVal.length - 4, 0)) || \"00\";\n\n    return {\n        hour: Number(hour),\n        min: Number(min),\n        sec: Number(sec),\n        totalSecs: Number(hour) * 3600 + Number(min) * 60 + Number(sec),\n    };\n}\n\nconst InputTimer: React.FC<InputTimerProps> = ({\n                                                   onReset,\n                                                   onAlarm\n                                               }) => {\n    const inputElRef = useRef<HTMLInputElement>(null);\n    const [inputVal, setInputVal] = useState(\"\");\n\n    const TIMER_NAME = 'INPUT_TIMER';\n    const {\n        timerState,\n        getTimerPloc,\n        handleReset,\n        handleStartPause,\n    } = useWorkerTimer({\n        timerName: TIMER_NAME,\n        initTimeVals: initTimeVals,\n        onTimerEnd(): any {\n            handleResetInput()\n            onAlarm()\n            handleFocusInput()\n            getTimerPloc().current.handleEditTimeVals('mins', String(0))\n            getTimerPloc().current.handleEditTimeVals('secs', String(0))\n        },\n        onTimerNameChanged: () => {\n        },\n        timerId: ~~(Math.random() * 100000),\n    });\n\n    const time = (() => {\n        return parseTimeToHHMMSS(inputVal);\n    })();\n\n    const handleStartCountdown = () => {\n        const handledTimeMin = getHandledTime(time.min);\n        const handledTimeSec = getHandledTime(time.sec)\n\n        getTimerPloc().current.handleEditTimeVals('mins', String(handledTimeMin))\n        getTimerPloc().current.handleEditTimeVals('secs', String(handledTimeSec))\n\n        handleStartPause()\n    };\n\n    function handleResetInput() {\n        onReset && onReset()\n        setInputVal(\"\");\n    }\n\n    const handleResetAndStop = () => {\n        handleResetInput();\n        handleReset()\n    };\n\n    function handleFocusInput() {\n        inputElRef.current?.focus();\n    }\n\n    useEffect(() => {\n        handleFocusInput();\n    }, []);\n\n    const handleKeyboardSupport: KeyboardEventHandler<HTMLInputElement> = e => {\n        if (e.key === 'Enter') {\n            handleStartCountdown()\n        }\n\n    };\n\n    return (\n        <div>\n            <div>\n                <h3>{timerState.parsedMinSecStr}</h3>\n                <input\n                    ref={inputElRef}\n                    autoFocus={true}\n                    placeholder=\"Type time\"\n                    value={inputVal}\n                    onChange={(e) => {\n                        setInputVal(e.target.value);\n                    }}\n                    onKeyUp={handleKeyboardSupport}\n                />\n                <button onClick={handleStartCountdown}>Start</button>\n                <button onClick={handleResetAndStop}>Reset</button>\n            </div>\n        </div>\n    );\n};\n\nexport default InputTimer;\n","import AudioSelectorContainer from 'containers/AudioSelectorContainer';\nimport TimerListContainer from 'containers/TimerListContainer';\nimport React, {ChangeEventHandler, memo, useRef} from 'react';\nimport AudioPlocState from 'states/AudioPlocState';\nimport {context} from 'states/context';\nimport {ContextActionsEnum} from 'states/ContextPlocState';\nimport usePlocState from 'states/usePlocState';\nimport './styles.scss';\nimport CustomInputTimer from \"./CustomInputTimer\";\n\nexport interface UseWorkerTimerViewProps {\n\n}\n\nconst useWorkerTimerView = () => {\n    const audioPloc = useRef(\n        new AudioPlocState({\n            volume: 0.7,\n            playTimeout: 3000,\n            repeatTimes: 3,\n            selectedAudio: 'heyListen'\n        })\n    );\n    const audioState = usePlocState(audioPloc.current);\n    const ctx = usePlocState(context);\n\n    const handleChangeVolume: ChangeEventHandler<HTMLInputElement> = (e) => {\n        context.dispatch({\n            type: ContextActionsEnum.SET_VOLUME,\n            payload: {volume: Number(e.target.value) / 100}\n        });\n    };\n\n    return ({\n        ctx,\n        audioPloc,\n        audioState,\n        handleChangeVolume,\n    });\n};\n\nconst WorkerTimerView = () => {\n    const {\n        ctx,\n        audioPloc,\n        audioState,\n        handleChangeVolume,\n    } = useWorkerTimerView();\n\n    return (\n        <div className={'worker-timer-view--wrapper container'}>\n            <h1>{'Worker Timer!'}</h1>\n            <AudioSelectorContainer\n                selectorListData={audioState.audioNameUrlList.map(a => ({\n                    text: a.name,\n                    value: a.url,\n                }))}\n                onAudioValueChanged={audioPloc.current.handleSetAudioUrl}\n            />\n            <input\n                type={'range'}\n                id={'volume'}\n                name={'volume'}\n                min={'0'}\n                max={'100'}\n                step={'11'}\n                value={String(ctx.alarmVolume * 100)}\n                onChange={handleChangeVolume}\n            />\n            <TimerListContainer\n                onTimerEnd={audioPloc.current.handleRepeatPlay}\n            />\n            <CustomInputTimer onAlarm={audioPloc.current.handleRepeatPlay}\n                              onReset={audioPloc.current.handlePause}/>\n        </div>\n    );\n};\n\nexport default memo(WorkerTimerView);\n","import './App.css';\nimport WorkerTimerView from 'view/WorkerTimerView';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <WorkerTimerView />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}